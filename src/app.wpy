<style lang="less">
@import './weui.wxss';

.container {
  height: 100%;
  background-color: #eeeeee;
  min-height: 100vh;
}

button[type = primary] {
  background-color: #6f95ff !important;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import Api from './config/api.js'

export default class extends wepy.app {
  config = {
    pages: [
      // 'pages/user/userHome',
      // 'pages/login',
      // 'pages/salary/salaryInfo',
      // 'pages/salary/comments',
      'pages/home/home',
      'pages/login',
      'pages/loading',
      'pages/user/userHome',
      'pages/user/userInfo',
      'pages/user/userCollection',
      'pages/user/userAttention',
      'pages/user/attentionList',
      'pages/user/userJoin',
      'pages/salary/addSalary',
      'pages/salary/salaryInfo',
      'pages/salary/comments',
      'pages/salary/moreSalary',
      'pages/common/searchandselect',
      'pages/system/feedback',
      'pages/system/setting',
    ],
    window: {
      backgroundTextStyle: 'light',
      backgroundColor: '#6f95ff',
      navigationBarBackgroundColor: '#6f95ff',
      navigationBarTitleText: ' 职场红领巾',
      navigationBarTextStyle: '#fff'
    },
    tabBar: {
      "color": "#707070",
      "selectedColor": "#6f95ff",
      "list": [
        {
          "pagePath": "pages/home/home",
          "text": "首页",
          "iconPath": "./images/home-un.png",
          "selectedIconPath": "./images/home.png"
        },
        {
          "pagePath": "pages/salary/addSalary",
          "text": "爆料",
          "iconPath": "./images/add-un.png",
          "selectedIconPath": "./images/add.png"
        },
        {
          "pagePath": "pages/user/userHome",
          "text": "我",
          "iconPath": "./images/user-un.png",
          "selectedIconPath": "./images/user.png"
        }
      ]
    },
  }

  globalData = {
    userInfo: null,
    token: '',
    firstLogin: true,
  }

  constructor () {
    super()
    this.use('requestfix');
    this.use('promisify');

    // 配置拦截器
    this.intercept('request', {
      config(p) {
        console.log("拦截config:", p);
        p.header = { 'content-type': "application/json;charset=UTF-8"} ;
        if (p.url.indexOf('token') == -1) {
          // p.data.token = this.globalData.token;
          if (p.url.indexOf('?') == -1) {
            p.url = p.url + `?token=${this.globalData.token}`
          } else {
            p.url = p.url + `&token=${this.globalData.token}`
          }
        }
        // console.log(p.url);
        // console.log("getCurrentPage::", getCurrentPages())
        return p;
      },
      success(p) {
        //
        let pages = getCurrentPages();
        console.log("拦截success:", p);
        if (p.data && p.data.code === -1) {
          // token 参数不正确！
          // 1、移除缓存中的token
          // 2、重新去登录更新token
          // 3、重新请求
          wepy.showToast({
            title: '服务器发生错误，请稍后重试',
            icon: 'none',
            duration: 2000
          });
        }
        return p;
      },
      fail(p) {
        wepy.showToast({
            title: '网络连接失败，请检查你的网络或联系管理员',
            icon: 'none',
            duration: 2000
        });
        return p;
      }
    })
  }

  onLaunch() {
  }
}
</script>
